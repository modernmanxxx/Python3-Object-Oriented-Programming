"""假设有一组火警报警系统，由三个子元件构成：一个警报器，一个喷水器，一个自动拨打电话的装置。其抽象如下："""


class 警报器(object):
    def 启动(self):
        print ("警报响起...")


class 喷水器(object):
    def 启动(self):
        print ("喷水...")


class 紧急拨号(object):
    def 启动(self):
        print ("打119...")

"""
在业务中如果需要将三个部件启动，例如，如果有一个烟雾传感器，检测到了烟雾。在业务环境中需要做如下操作：
"""

"""
if __name__=="__main__":
    警报器=警报器()
    喷水器=喷水器()
    紧急拨号=紧急拨号()
    警报器.启动()
    喷水器.启动()
    紧急拨号.启动()
"""

"""
但如果在多个业务场景中需要启动三个部件，怎么办？Ctrl+C加上Ctrl+V么？
当然可以这样，但作为码农的基本修养之一，减少重复代码是应该会被很轻易想到的方法。
这样，需要将其进行封装，在设计模式中，被封装成的新对象，叫做门面。门面构建如下
"""


class 险象外观(object):
    def __init__(self):
        self.警报器 = 警报器()
        self.喷水器 = 喷水器()
        self.紧急拨号 = 紧急拨号()

    def 全部启动(self):
        self.警报器.启动()
        self.喷水器.启动()
        self.紧急拨号.启动()

"""这样，业务场景中这样写就可以了："""

if __name__ == "__main__":
    险象外观对象 = 险象外观()
    #创建 "险象外观"对象,这个对象创建的同时添加3个属性(实例化的对象),随时可以调用该对象"全部启动"的def
    险象外观对象.全部启动()
