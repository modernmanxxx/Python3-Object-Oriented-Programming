class 已售完(Exception):
    pass


class 无效的商品类型(Exception):
    pass


class 库存处理类:
    def 锁定(self, 商品类型):
        """参数[商品类型]:要锁定的商品类型,这个方法将锁定这个这个商品类型,知道这个商品被解锁,
        这样可以防止把同上的商品同时卖给两个不同的客户."""
        pass

    def 解锁(self, 商品类型):
        """释放锁定的[商品类型],是另外的客户可以访问这个[商品类型]"""
        pass

    def 购买(self, 商品类型):
        """如果[self.商品类型]没有被锁定,那么会引发异常;
        如果商品类型不存在将会引发异常;
        如果商品类型缺货,将会引发异常;
        如果商品类型可用,那么该商品数量会-1,然后返回该商品剩余的数量"""
        pass


商品类型 = "小部件"
库存处理对象 = 库存处理类()
库存处理对象.锁定(商品类型)

try:
    剩余商品数量 = 库存处理对象.购买(商品类型)
except 无效的商品类型:
    print("对不起,我们暂时不卖{}这种东西".format(商品类型))
except 已售完:
    print("对不起,{}已经卖完了".format(商品类型))
else:
    print("购买完毕.现在{}库存中的剩余数量是{}".format(剩余商品数量, 商品类型))
finally:
    库存处理对象.解锁(商品类型)
